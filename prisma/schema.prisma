// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Size {
  XS
  S
  M
  L
  XL
  XXL
  XXXL
}

enum Gender {
  men
  women
  kid
  unisex
}

model Category {
  id      String    @id @default(uuid())
  name    String    @unique

  Product Product[] //Relacion con producto. Esto NO crea una nueva columna en Category, solo establece una relacion.
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String
  inStock     Int
  price       Float    @default(0)
  sizes       Size[]   @default([])
  slug        String   @unique
  tags        String[] @default([])
  gender      Gender

  catagory     Category       @relation(fields: [categoryId], references: [id]) //Agarra mi campo categoryId de este modelo y relacionalo con el campo id del modelo Category.
  categoryId   String

  ProductImage ProductImage[] //Relacion con ProductImage. Esto NO crea una nueva columna en Product, solo establece una relacion.

  @@index([gender]) //AÃ±ado un indice porque voy a querer por ejemplo buscar todos los productos por algun genero.
}

model ProductImage {  //En este proyecto creamos un modelo especial para las imagenes de cada producto.
  id  Int    @id @default(autoincrement())
  url String

  product   Product @relation(fields: [productId], references: [id]) //Agarra mi campo productId de este modelo y relacionalo con el campo id del modelo Product.
  productId String
}
